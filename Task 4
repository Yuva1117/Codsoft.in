import pandas as pd
from sklearn.metrics.pairwise import cosine_similarity

# Sample user-item ratings matrix
data = {
    'User': ['User1', 'User1', 'User1', 'User2', 'User2', 'User3', 'User3', 'User3', 'User4', 'User4'],
    'Item': ['Item1', 'Item2', 'Item3', 'Item1', 'Item4', 'Item2', 'Item3', 'Item4', 'Item1', 'Item3'],
    'Rating': [5, 4, 3, 4, 5, 4, 2, 4, 3, 5]
}

df = pd.DataFrame(data)

# Create a pivot table
pivot_table = df.pivot_table(index='User', columns='Item', values='Rating')

# Fill NaN with 0 (assumes missing ratings are 0)
pivot_table = pivot_table.fillna(0)

# Compute the cosine similarity matrix
item_similarity = cosine_similarity(pivot_table.T)
item_similarity_df = pd.DataFrame(item_similarity, index=pivot_table.columns, columns=pivot_table.columns)

# Function to get item recommendations based on item similarity
def get_recommendations(item, similarity_matrix, num_recommendations=5):
    if item not in similarity_matrix.columns:
        raise ValueError(f"Item '{item}' not found in similarity matrix")
    similar_items = similarity_matrix[item].sort_values(ascending=False)
    similar_items = similar_items.drop(item)  # Drop the item itself
    return similar_items.head(num_recommendations)

# Example usage
item_to_recommend = 'Item1'
num_recommendations = 3
recommendations = get_recommendations(item_to_recommend, item_similarity_df, num_recommendations)

print(f"Recommendations for '{item_to_recommend}':")
print(recommendations)
